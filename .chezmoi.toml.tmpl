# -*-mode:conf-toml-*- vim:ft=toml

# ~/.local/share/chezmoi/.chezmoi.toml.tmpl
# =============================================================================
# Used to customize configuration when doing a `chezmoi init`.
#
# This template file will trigger prompts to fill-in machine-specific
# templateable values. The resulting file is then created at
# `~/.config/chezmoi/chezmoi.toml`
# See https://www.chezmoi.io/docs/how-to/
#
# {{- /* This file supports Go's text/template language. */}}

# umask
umask = 0o022
# show progress
progress = true

[merge]
    # in usr/local/bin/vdiff with emacs vdiff
    command = "vdiff"

{{- /* Checks if running interactively, which is not the case for GitHub Codespaces */}}
{{- $interactive := stdinIsATTY }}

{{- /* Default value for Git user conf */}}
{{- $name := "peccu" }}
{{- $email := "peccul@gmail.com" }}
{{- $theWayGHToken := "" }}
{{- $theWayGistId := "" }}

{{- if $interactive }}
{{-   $name = promptStringOnce . "my.name" "Git username for the author/committer" $name }}
{{-   $email = promptStringOnce . "my.email" "Git email address for the author/committer" $email }}
{{-   $theWayGHToken = promptStringOnce . "my.theWayGHToken" "GitHub Token to access gist for The-Way" }}
{{-   $theWayGistId = promptStringOnce . "my.theWayGistId" "gist ID for The-Way" }}
{{-   writeToStdout "ðŸ’¡ Tip: you can re-enter your name and email with `chezmoi init --data=false`.\n" }}
{{- else }}
{{-   if hasKey . "my.name" }}
{{-     $name = .name }}
{{-   end }}
{{-   if hasKey . "my.email" }}
{{-     $email = .email }}
{{-   end }}
{{- end }}

# Data block (Needs this line to prevent concat data block and previous conf)
[data.my]
    email = {{ $email | quote }}
    name = {{ $name | quote }}
    theWayGHToken = {{ $theWayGHToken | quote }}
    theWayGistId = {{ $theWayGistId | quote }}
    # Environment detection
    # ref. https://www.chezmoi.io/user-guide/machines/containers-and-vms/
    home = {{ eq .chezmoi.hostname "home" }}
    {{- $tool := eq (env "TOOLTYPE") "tool" }}
    tool = {{ $tool }}
    codespaces = {{ env "CODESPACES" | not | not }}
    {{- $codesandbox := env "CODESANDBOX_HOST" | not | not }}
    codesandbox = {{ $codesandbox }}
    wsl = {{ env "WSLENV" | not | not }}
    # Features Flags
    withZsh = {{ promptBoolOnce . "my.withZsh" "Use zsh conf with oh-my-zsh" }}
    withTmux = {{ promptBoolOnce . "my.withTmux" "Use tmux conf with tpm" }}
    withAhk = {{ promptBoolOnce . "my.withAhk" "Use AutoHotKey conf" }}
    withWsl = {{ promptBoolOnce . "my.withWsl" "Use Wsl conf for shrink scripts etc." }}
    withWinterm = {{ promptBoolOnce . "my.withWinterm" "Use WindowsTerminal settings" }}
    withMintty = {{ promptBoolOnce . "my.withMintty" "Use mintty tmux conf" }}
    withOci = {{ promptBoolOnce . "my.withOci" "Use oci conf" }}
